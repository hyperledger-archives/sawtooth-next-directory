#!/usr/bin/env python3

# Copyright 2018 Contributors to Hyperledger Sawtooth
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

import os
import asyncio
import logging
import sys

TOP_DIR = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
sys.path.insert(0, TOP_DIR)

from rbac.providers.ldap import ldap_outbound_service

LOGGER = logging.getLogger(__name__)
LOGGER.level = logging.INFO
LOGGER.addHandler(logging.StreamHandler(sys.stdout))


def main():
    loop = asyncio.get_event_loop()
    LOGGER.info('Exporting existing outbound queue records...')
    loop.run_until_complete(
        ldap_outbound_service.export_preexisting_ldap_outbound_records())
    LOGGER.info('...outbound queue records exported.')

    LOGGER.info('Starting long-running outbound sync tasks...')
    asyncio.ensure_future(ldap_outbound_service.sync_outbound_queue_to_ldap())
    loop.run_forever()


if __name__ == '__main__':
    main()
